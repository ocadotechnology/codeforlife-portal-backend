{
  "customizations": {
    "vscode": {
      "extensions": [
        "visualstudioexptteam.vscodeintellicode",
        "github.vscode-pull-request-github",
        "redhat.vscode-yaml",
        "davidanson.vscode-markdownlint",
        "bierner.markdown-mermaid",
        "streetsidesoftware.code-spell-checker",
        "dbaeumer.vscode-eslint",
        "ms-python.python",
        "ms-python.pylint",
        "ms-python.isort",
        "ms-python.vscode-pylance",
        "ms-python.mypy-type-checker",
        "ms-python.black-formatter",
        "qwtel.sqlite-viewer",
        "njpwerner.autodocstring"
      ],
      "settings": {
        "[md]": {
          "editor.tabSize": 4
        },
        "[python]": {
          "editor.defaultFormatter": "ms-python.black-formatter",
          "editor.tabSize": 4
        },
        "autoDocstring.customTemplatePath": ".vscode/extensions/autoDocstring/docstring.mustache",
        "black-formatter.args": [
          "--config",
          "pyproject.toml"
        ],
        "black-formatter.cwd": "${workspaceFolder}/backend",
        "black-formatter.path": [
          ".venv/bin/python",
          "-m",
          "black"
        ],
        "cSpell.words": [
          "codeforlife",
          "klass",
          "ocado",
          "kurono",
          "pipenv"
        ],
        "editor.codeActionsOnSave": {
          "source.organizeImports": "explicit"
        },
        "editor.formatOnSave": true,
        "editor.rulers": [
          80
        ],
        "editor.tabSize": 2,
        "files.exclude": {
          "**/.hypothesis": true,
          "**/.mypy_cache": true,
          "**/.pytest_cache": true,
          "**/__pycache__": true
        },
        "isort.args": [
          "--settings-file=backend/pyproject.toml"
        ],
        "isort.path": [
          "backend/.venv/bin/python",
          "-m",
          "isort"
        ],
        "mypy-type-checker.args": [
          "--config-file=pyproject.toml"
        ],
        "mypy-type-checker.cwd": "${workspaceFolder}/backend",
        "mypy-type-checker.path": [
          ".venv/bin/python",
          "-m",
          "mypy"
        ],
        "pylint.args": [
          "--rcfile=pyproject.toml"
        ],
        "pylint.cwd": "${workspaceFolder}/backend",
        "pylint.path": [
          ".venv/bin/python",
          "-m",
          "pylint"
        ],
        "python.analysis.extraPaths": [
          "../codeforlife-package-python"
        ],
        "python.defaultInterpreterPath": "backend/.venv/bin/python",
        "python.testing.cwd": "${workspaceFolder}/backend",
        "python.testing.pytestArgs": [
          "-n=auto",
          "-c=pyproject.toml",
          "."
        ],
        "python.testing.pytestEnabled": true,
        "python.testing.unittestEnabled": false,
        "typescript.preferences.quoteStyle": "single",
        "workbench.colorCustomizations": {
          "editorRuler.foreground": "#008000"
        }
      }
    }
  },
  "dockerComposeFile": [
    "../docker-compose.yml"
  ],
  "features": {
    "ghcr.io/devcontainers-contrib/features/pipenv:2": {
      "version": "2023.11.15"
    },
    "ghcr.io/devcontainers/features/node:1": {
      "version": "18"
    },
    "ghcr.io/devcontainers/features/python:1": {
      "installTools": false,
      "version": "3.8"
    }
  },
  "mounts": [
    "source=./codeforlife-package-javascript,target=/workspace/codeforlife-package-javascript,type=bind,consistency=cached",
    "source=./codeforlife-package-python,target=/workspace/codeforlife-package-python,type=bind,consistency=cached"
  ],
  "name": "portal-react",
  "postCreateCommand": "./setup",
  "remoteUser": "root",
  "service": "base-service",
  "shutdownAction": "none",
  "workspaceFolder": "/workspace/codeforlife-portal-react"
}