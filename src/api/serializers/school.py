"""
Â© Ocado Group
Created on 23/01/2024 at 11:05:41(+00:00).
"""

from codeforlife.user.models import School, school_name_validators
from codeforlife.user.serializers import SchoolSerializer as _SchoolSerializer
from rest_framework import serializers


# pylint: disable-next=missing-class-docstring,too-many-ancestors
class SchoolSerializer(_SchoolSerializer):
    country = serializers.ChoiceField(  # type: ignore[assignment]
        required=False,
        choices=[
            "AD",
            "AE",
            "AF",
            "AG",
            "AI",
            "AL",
            "AM",
            "AO",
            "AQ",
            "AR",
            "AS",
            "AT",
            "AU",
            "AW",
            "AX",
            "AZ",
            "BA",
            "BB",
            "BD",
            "BE",
            "BF",
            "BG",
            "BH",
            "BI",
            "BJ",
            "BL",
            "BM",
            "BN",
            "BO",
            "BQ",
            "BR",
            "BS",
            "BT",
            "BV",
            "BW",
            "BY",
            "BZ",
            "CA",
            "CC",
            "CD",
            "CF",
            "CG",
            "CH",
            "CI",
            "CK",
            "CL",
            "CM",
            "CN",
            "CO",
            "CR",
            "CU",
            "CV",
            "CW",
            "CX",
            "CY",
            "CZ",
            "DE",
            "DJ",
            "DK",
            "DM",
            "DO",
            "DZ",
            "EC",
            "EE",
            "EG",
            "EH",
            "ER",
            "ES",
            "ET",
            "FI",
            "FJ",
            "FK",
            "FM",
            "FO",
            "FR",
            "GA",
            "GB",
            "GD",
            "GE",
            "GF",
            "GG",
            "GH",
            "GI",
            "GL",
            "GM",
            "GN",
            "GP",
            "GQ",
            "GR",
            "GS",
            "GT",
            "GU",
            "GW",
            "GY",
            "HK",
            "HM",
            "HN",
            "HR",
            "HT",
            "HU",
            "ID",
            "IE",
            "IL",
            "IM",
            "IN",
            "IO",
            "IQ",
            "IR",
            "IS",
            "IT",
            "JE",
            "JM",
            "JO",
            "JP",
            "KE",
            "KG",
            "KH",
            "KI",
            "KM",
            "KN",
            "KP",
            "KR",
            "KW",
            "KY",
            "KZ",
            "LA",
            "LB",
            "LC",
            "LI",
            "LK",
            "LR",
            "LS",
            "LT",
            "LU",
            "LV",
            "LY",
            "MA",
            "MC",
            "MD",
            "ME",
            "MF",
            "MG",
            "MH",
            "MK",
            "ML",
            "MM",
            "MN",
            "MO",
            "MP",
            "MQ",
            "MR",
            "MS",
            "MT",
            "MU",
            "MV",
            "MW",
            "MX",
            "MY",
            "MZ",
            "NA",
            "NC",
            "NE",
            "NF",
            "NG",
            "NI",
            "NL",
            "NO",
            "NP",
            "NR",
            "NU",
            "NZ",
            "OM",
            "PA",
            "PE",
            "PF",
            "PG",
            "PH",
            "PK",
            "PL",
            "PM",
            "PN",
            "PR",
            "PS",
            "PT",
            "PW",
            "PY",
            "QA",
            "RE",
            "RO",
            "RS",
            "RU",
            "RW",
            "SA",
            "SB",
            "SC",
            "SD",
            "SE",
            "SG",
            "SH",
            "SI",
            "SJ",
            "SK",
            "SL",
            "SM",
            "SN",
            "SO",
            "SR",
            "SS",
            "ST",
            "SV",
            "SX",
            "SY",
            "SZ",
            "TC",
            "TD",
            "TF",
            "TG",
            "TH",
            "TJ",
            "TK",
            "TL",
            "TM",
            "TN",
            "TO",
            "TR",
            "TT",
            "TV",
            "TW",
            "TZ",
            "UA",
            "UG",
            "UM",
            "US",
            "UY",
            "UZ",
            "VA",
            "VC",
            "VE",
            "VG",
            "VI",
            "VN",
            "VU",
            "WF",
            "WS",
            "YE",
            "YT",
            "ZA",
            "ZM",
            "ZW",
        ],
    )

    uk_county = serializers.ChoiceField(  # type: ignore[assignment]
        source="county",
        required=False,
        choices=[
            "Aberdeen City",
            "Aberdeenshire",
            "Angus",
            "Argyll and Bute",
            "Bedfordshire",
            "Belfast",
            "Belfast Greater",
            "Berkshire",
            "Blaenau Gwent",
            "Bridgend",
            "Buckinghamshire",
            "Caerphilly",
            "Cambridgeshire",
            "Cardiff",
            "Carmarthenshire",
            "Ceredigion",
            "Channel Islands",
            "Cheshire",
            "City of Edinburgh",
            "Clackmannanshire",
            "Conwy",
            "Cornwall",
            "County Antrim",
            "County Armagh",
            "County Down",
            "County Fermanagh",
            "County Londonderry",
            "County Tyrone",
            "County of Bristol",
            "Cumbria",
            "Denbighshire",
            "Derbyshire",
            "Devon",
            "Dorset",
            "Dumfries and Galloway",
            "Dunbartonshire",
            "Dundee City",
            "Durham",
            "East Ayrshire",
            "East Dunbartonshire",
            "East Lothian",
            "East Renfrewshire",
            "East Riding of Yorkshire",
            "East Sussex",
            "Essex",
            "Falkirk",
            "Fife",
            "Flintshire",
            "Glasgow City",
            "Gloucestershire",
            "Greater London",
            "Greater Manchester",
            "Guernsey Channel Islands",
            "Gwynedd",
            "Hampshire",
            "Hereford and Worcester",
            "Herefordshire",
            "Hertfordshire",
            "Highland",
            "Inverclyde",
            "Inverness",
            "Isle of Anglesey",
            "Isle of Barra",
            "Isle of Man",
            "Isle of Wight",
            "Jersey Channel Islands",
            "Kent",
            "Lancashire",
            "Leicestershire",
            "Lincolnshire",
            "Merseyside",
            "Merthyr Tydfil",
            "Midlothian",
            "Monmouthshire",
            "Moray",
            "Neath Port Talbot",
            "Newport",
            "Norfolk",
            "North Ayrshire",
            "North Lanarkshire",
            "North Yorkshire",
            "Northamptonshire",
            "Northumberland",
            "Nottinghamshire",
            "Orkney",
            "Orkney Islands",
            "Oxfordshire",
            "Pembrokeshire",
            "Perth and Kinross",
            "Powys",
            "Renfrewshire",
            "Rhondda Cynon Taff",
            "Rutland",
            "Scottish Borders",
            "Shetland Islands",
            "Shropshire",
            "Somerset",
            "South Ayrshire",
            "South Lanarkshire",
            "South Yorkshire",
            "Staffordshire",
            "Stirling",
            "Suffolk",
            "Surrey",
            "Swansea",
            "Torfaen",
            "Tyne and Wear",
            "Vale of Glamorgan",
            "Warwickshire",
            "West Dunbart",
            "West Lothian",
            "West Midlands",
            "West Sussex",
            "West Yorkshire",
            "Western Isles",
            "Wiltshire",
            "Worcestershire",
            "Wrexham",
        ],
    )

    class Meta(_SchoolSerializer.Meta):
        extra_kwargs = {
            **_SchoolSerializer.Meta.extra_kwargs,
            "name": {
                "read_only": False,
                "validators": school_name_validators,
            },
        }

    # TODO: set unique=True for model name field in new models.
    # pylint: disable-next=missing-function-docstring
    def validate_name(self, value: str):
        if School.objects.filter(name=value).exists():
            raise serializers.ValidationError(
                "Name already taken.",
                code="name_not_unique",
            )

        return value

    def validate(self, attrs):
        if "uk_county" in attrs:
            country = attrs.get(
                "country",
                self.instance.country if self.instance else None,
            )
            if country != "GB":
                raise serializers.ValidationError(
                    "Cannot set the UK county when country is not set to GB.",
                    code="country_ne_gb",
                )

        return attrs

    def create(self, validated_data):
        school = School.objects.create(**validated_data)

        user = self.request.non_school_teacher_user
        user.teacher.school = school
        user.teacher.is_admin = True
        user.teacher.save(update_fields=["school", "is_admin"])

        return school

    def to_representation(self, instance):
        return {
            "id": instance.id,
            "name": instance.name,
            "country": instance.country.code,
            "uk_county": instance.county,
        }
